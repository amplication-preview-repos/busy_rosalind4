/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Lobby as PrismaLobby } from "@prisma/client";

export class LobbyServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.LobbyCountArgs, "select">): Promise<number> {
    return this.prisma.lobby.count(args);
  }

  async lobbies(args: Prisma.LobbyFindManyArgs): Promise<PrismaLobby[]> {
    return this.prisma.lobby.findMany(args);
  }
  async lobby(args: Prisma.LobbyFindUniqueArgs): Promise<PrismaLobby | null> {
    return this.prisma.lobby.findUnique(args);
  }
  async createLobby(args: Prisma.LobbyCreateArgs): Promise<PrismaLobby> {
    return this.prisma.lobby.create(args);
  }
  async updateLobby(args: Prisma.LobbyUpdateArgs): Promise<PrismaLobby> {
    return this.prisma.lobby.update(args);
  }
  async deleteLobby(args: Prisma.LobbyDeleteArgs): Promise<PrismaLobby> {
    return this.prisma.lobby.delete(args);
  }
}
